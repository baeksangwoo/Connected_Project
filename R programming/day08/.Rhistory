car3<-dbGetQuery(conn,sqlstr3);
# 5. Close
dbDisconnect(conn)
drvName<- 'oracle.jdbc.driver.OracleDriver';
id<- 'ruser';
pwd<- '111111'
url<-'jdbc:oracle:thin:@localhost:1521:XE'
# 1. Driver Loading
drv <- JDBC(driverClass = drvName,classPath = 'c:\\java_hive_lib\\ojdbc6.jar')
# 2. Connection
conn<- dbConnect(drv,url,id,pwd)
# 3. Statement
sqlstr1<-"select * from CAR where LOCATION='서울특별시' ";
sqlstr2<-"select * from CAR where LOCATION='인천광역시' ";
sqlstr3<-"select * from CAR where LOCATION='경기도' ";
# 4. ResultSet
car1<-dbGetQuery(conn,sqlstr1);
car2<-dbGetQuery(conn,sqlstr2);
car3<-dbGetQuery(conn,sqlstr3);
car
# 5. Close
dbDisconnect(conn)
car1
car1
car2
ggplot(car1,aes(x=YEAR, y=TOTAL))+geom_line()
ggplot(car1,aes(x=YEAR, y=TOTAL))+geom_line()+
geom_line(data=car2,aes(x=YEAR, y=TOTAL),colour='red')+
geom_line(data=car2,aes(x=YEAR, y=TOTAL),colour='red')+
geom_point(data=pressure2,aes(x=temperature, y=pressure/2),colour='red')
ggplot(car1,aes(x=YEAR, y=TOTAL),colour='red')+geom_line()+
geom_line(data=car2,aes(x=YEAR, y=TOTAL),colour='blue')+
geom_line(data=car3,aes(x=YEAR, y=TOTAL),colour='green')
ggplot(data=car1, aes(x=YEAR, y=TOTAL),col(C('red','green','blue')))+geom_col()
ggplot(data=car1, aes(x=YEAR, y=TOTAL),col(C('red','green','blue')))+geom_line()
ggplot(data=car1, aes(x=YEAR, y=TOTAL)))+geom_line()
#geom_line() 꺽은선
ggplot(data=car1, aes(x=YEAR, y=TOTAL))+geom_line()
#geom_line() 꺽은선
ggplot(data=car1, aes(x=YEAR, y=TOTAL,group = 1))+geom_line()
ggplot(data=car1, aes(x=YEAR, y=TOTAL))+ylime(0,4000000)+geom_line()
ggplot(data=car1, aes(x=YEAR, y=TOTAL))+ylime(0,400000)+geom_line()
ggplot(data=car1, aes(x=YEAR, y=TOTAL))+ylim(0,400000)+geom_line()
ggplot(data=car1, aes(x=YEAR, y=TOTAL))+ylim(0,40000)+geom_line()
ggplot(data=car1, aes(x=YEAR, y=TOTAL))+ylim(30000,400000)+geom_line()
ggplot(data=car1, aes(x=YEAR, y=TOTAL))+ylim(3000,400000)+geom_line()
ggplot(data=car1, aes(x=YEAR, y=TOTAL))+geom_line()
ggplot(data=car1, aes(x=YEAR, y=TOTAL,group=2)+geom_line()
ggplot(data=car1, aes(x=YEAR, y=TOTAL,group=2)+geom_line();
ggplot(data=car1, aes(x=YEAR, y=TOTAL,group=2))+geom_line();
ggplot(car1,aes(x=YEAR, y=TOTAL),colour='red')+geom_line()+
geom_line(data=car2,aes(x=YEAR, y=TOTAL),colour='blue')+
geom_line(data=car3,aes(x=YEAR, y=TOTAL),colour='green')+
geom_point(data=car1,aes(x=YEAR, y=TOTAL),colour='red')+
geom_point(data=car2,aes(x=YEAR, y=TOTAL),colour='blue')+
geom_point(data=car3,aes(x=YEAR, y=TOTAL),colour='green')
ggplot(car1,aes(x=YEAR, y=TOTAL),colour='red',group=1)+geom_line()+
geom_line(data=car2,aes(x=YEAR, y=TOTAL,group=2),colour='blue')+
geom_line(data=car3,aes(x=YEAR, y=TOTAL,group=3),colour='green')+
geom_point(data=car1,aes(x=YEAR, y=TOTAL,group=1),colour='red')+
geom_point(data=car2,aes(x=YEAR, y=TOTAL,group=2),colour='blue')+
geom_point(data=car3,aes(x=YEAR, y=TOTAL,group=3),colour='green')
car1
car2
ggplot(car1,aes(x=YEAR, y=TOTAL),colour='red',group=1)+geom_line()
ggplot(car1,aes(x=YEAR, y=TOTAL),colour='red',group=1)+geom_line()
ggplot(car1,aes(x=YEAR, y=TOTAL),colour='red',group=1)+geom_line()
ggplot(car1,aes(x=YEAR, y=TOTAL),colour='red',group=1)+geom_line()
ggplot(car1,aes(x=YEAR, y=TOTAL),colour='red',group=1)+geom_line()
ggplot(car1,aes(x=YEAR, y=TOTAL),colour='red',group=1)+geom_line()
ggplot(car1,aes(x=YEAR, y=TOTAL),colour='red',group=1)+geom_line()
ggplot(car1,aes(x=YEAR, y=TOTAL),colour='red')+geom_line()
ggplot(car1,aes(x=YEAR, y=TOTAL),colour='red')+geom_line()
ggplot(car1,aes(x=YEAR, y=TOTAL),colour='red')+geom_line()
ggplot(car1,aes(x=YEAR, y=TOTAL),colour='red')+geom_line()
ggplot(car1,aes(x=YEAR, y=TOTAL),colour='red')+geom_line()
ggplot(car1,aes(x=YEAR, y=TOTAL),colour='red')+geom_line()
ggplot(car1,aes(x=YEAR, y=TOTAL),colour='red')+geom_line()
ggplot(car1,aes(x=YEAR, y=TOTAL),colour='red')+geom_line()
ggplot(car1,aes(x=YEAR, y=TOTAL),colour='red')+geom_line()
ggplot(car1,aes(x=YEAR, y=TOTAL),colour='red')+geom_line()
ggplot(car1,aes(x=YEAR, y=TOTAL),colour='red')+geom_line()
ggplot(car1,aes(x=YEAR, y=TOTAL),colour='red')+geom_line()
ggplot(car1,aes(x=YEAR, y=TOTAL),colour='red')+geom_line()
ggplot(car1,aes(x=YEAR, y=TOTAL),colour='red')+geom_line()
ggplot(car1,aes(x=YEAR, y=TOTAL),colour='red')+geom_line()
ggplot(car1,aes(x=YEAR, y=TOTAL),colour='red')+geom_line()
ggplot(car1,aes(x=YEAR, y=TOTAL),colour='red')+geom_line()
ggplot(car1,aes(x=YEAR, y=TOTAL),colour='red')+geom_line()
ggplot(car1,aes(x=YEAR, y=TOTAL),colour='red')+geom_line()
ggplot(data=car1, aes(x=YEAR, y=TOTAL,group=1))+geom_line()
ggplot(data=car1, aes(x=YEAR, y=TOTAL,group=1))+geom_line()
geom_line(data=car2,aes(x=YEAR, y=TOTAL,group=2),colour='blue')
ggplot(car1,aes(x=YEAR, y=TOTAL),colour='red',group=1)+geom_line()+
geom_line(data=car2,aes(x=YEAR, y=TOTAL,group=2),colour='blue')+
geom_line(data=car3,aes(x=YEAR, y=TOTAL,group=3),colour='green')+
geom_point(data=car1,aes(x=YEAR, y=TOTAL,group=1),colour='red')+
geom_point(data=car2,aes(x=YEAR, y=TOTAL,group=2),colour='blue')+
geom_point(data=car3,aes(x=YEAR, y=TOTAL,group=3),colour='green')
ggplot(car1,aes(x=YEAR, y=TOTAL),colour='red',group=1)+geom_line()+
geom_line(data=car2,aes(x=YEAR, y=TOTAL,group=2),colour='blue')+
geom_point(data=car1,aes(x=YEAR, y=TOTAL,group=1),colour='red')+
geom_point(data=car2,aes(x=YEAR, y=TOTAL,group=2),colour='blue')
ggplot(car1,aes(x=YEAR, y=TOTAL),colour='red')+geom_line()+
geom_line(data=car2,aes(x=YEAR, y=TOTAL),colour='blue')+
geom_point(data=car1,aes(x=YEAR, y=TOTAL),colour='red')+
geom_point(data=car2,aes(x=YEAR, y=TOTAL),colour='blue')
library(rJava)
library(RJDBC)
library(DBI)
drvName<- 'oracle.jdbc.driver.OracleDriver';
id<- 'ruser';
pwd<- '111111'
url<-'jdbc:oracle:thin:@localhost:1521:XE'
# 1. Driver Loading
drv <- JDBC(driverClass = drvName,classPath = 'c:\\java_hive_lib\\ojdbc6.jar')
# 2. Connection
conn<- dbConnect(drv,url,id,pwd)
# 3. Statement
sqlstr<-'select trunc(months_between(sysdate,HIREDATE)) AS MON,SAL from emp';
# 4. ResultSet
emp<-dbGetQuery(conn,sqlstr);
# 5. Close
dbDisconnect(conn)
HIREDATE
# 달별로 쪼개야한다.
#select trunc(months_between(sysdate,HIREDATE)) AS MON,SAL from emp;
ggplot(data=emp, aes(x=MON, y=SAL),col(C('red','green','blue')))+geom_col()
#geom_line() 꺽은선
#emp 회사의 근속 연수(오늘 날짜 기준 일) 와 월급의
# 상관 관계를 그래프로 표현하시오
library(rJava)
library(RJDBC)
library(DBI)
drvName<- 'oracle.jdbc.driver.OracleDriver';
id<- 'ruser';
pwd<- '111111'
url<-'jdbc:oracle:thin:@localhost:1521:XE'
# 1. Driver Loading
drv <- JDBC(driverClass = drvName,classPath = 'c:\\java_hive_lib\\ojdbc6.jar')
# 2. Connection
conn<- dbConnect(drv,url,id,pwd)
# 3. Statement
sqlstr<-'select trunc(months_between(sysdate,HIREDATE)) AS MON,SAL from emp';
# 4. ResultSet
emp<-dbGetQuery(conn,sqlstr);
# 5. Close
dbDisconnect(conn)
# 달별로 쪼개야한다.
#select trunc(months_between(sysdate,HIREDATE)) AS MON,SAL from emp;
ggplot(data=emp, aes(x=MON, y=SAL),col(C('red','green','blue')))+geom_col()
#geom_line() 꺽은선
#coord_flip 옆으로 돌려버리
#두개의 데이터를 합쳐서 보여주기
pressure2<- pressure*2
ggplot(pressure,aes(x=temperature, y=pressure))+geom_line()+
geom_line(data=pressure2,aes(x=temperature, y=pressure/2),colour='red')+
geom_point(data=pressure2,aes(x=temperature, y=pressure/2),colour='red')
# 1. 데이터 수집 csv
# 2. Developer를 이용하여 테이블을 생성하여 입력한다.
# 3. R을 이용하여 데이터를 분석
library(rJava)
library(RJDBC)
library(DBI)
library(ggplot2)
drvName<- 'oracle.jdbc.driver.OracleDriver';
id<- 'ruser';
pwd<- '111111'
url<-'jdbc:oracle:thin:@localhost:1521:XE'
# 1. Driver Loading
drv <- JDBC(driverClass = drvName,classPath = 'c:\\java_hive_lib\\ojdbc6.jar')
# 2. Connection
conn<- dbConnect(drv,url,id,pwd)
# 3. Statement
sqlstr<-'select trunc(months_between(sysdate,HIREDATE)) AS MON,SAL from emp';
# 4. ResultSet
emp<-dbGetQuery(conn,sqlstr);
# 5. Close
dbDisconnect(conn)
# 달별로 쪼개야한다.
#select trunc(months_between(sysdate,HIREDATE)) AS MON,SAL from emp;
ggplot(data=emp, aes(x=MON, y=SAL),col(C('red','green','blue')))+geom_col()
#geom_line() 꺽은선
#coord_flip 옆으로 돌려버리
#두개의 데이터를 합쳐서 보여주기
pressure2<- pressure*2
ggplot(pressure,aes(x=temperature, y=pressure))+geom_line()+
geom_line(data=pressure2,aes(x=temperature, y=pressure/2),colour='red')+
geom_point(data=pressure2,aes(x=temperature, y=pressure/2),colour='red')
library(rJava)
library(RJDBC)
library(DBI)
drvName<- 'oracle.jdbc.driver.OracleDriver';
id<- 'ruser';
pwd<- '111111'
url<-'jdbc:oracle:thin:@localhost:1521:XE'
# 1. Driver Loading
drv <- JDBC(driverClass = drvName,classPath = 'c:\\java_hive_lib\\ojdbc6.jar')
# 2. Connection
conn<- dbConnect(drv,url,id,pwd)
# 3. Statement
sqlstr1<-"select * from CAR where LOCATION='서울특별시' ";
sqlstr2<-"select * from CAR where LOCATION='인천광역시' ";
sqlstr3<-"select * from CAR where LOCATION='경기도' ";
# 4. ResultSet
car1<-dbGetQuery(conn,sqlstr1);
car2<-dbGetQuery(conn,sqlstr2);
car3<-dbGetQuery(conn,sqlstr3);
# 5. Close
dbDisconnect(conn)
ggplot(data=car1, aes(x=YEAR, y=TOTAL,group=1))+geom_line()+
ggplot(data=car1, aes(x=YEAR, y=TOTAL,group=1))+geom_line()
ggplot(data=car1, aes(x=YEAR, y=TOTAL,group=1))+geom_line()
ggplot(data=car1, aes(x=YEAR, y=TOTAL,group=1))+geom_line()+option(scipen=10000000)
option(scipen=10000000)
options(scipen=10000000)
ggplot(data=car1, aes(x=YEAR, y=TOTAL))+geom_line()
options(scipen=10000000)
ggplot(data = car, aes(x=YEAR,y=TOTAL,fill='location'))+geom_line()+geom_point()+geom_line(data=car2,aes(x=YEAR,y=TOTAL),colour="blue")+geom_point(data=car3,aes(x = YEAR, y = TOTAL),colour="red")
location=c('서울','경기','인천')
options(scipen=10000000)
ggplot(data = car, aes(x=YEAR,y=TOTAL,fill='location'))+geom_line()+geom_point()+geom_line(data=car2,aes(x=YEAR,y=TOTAL),colour="blue")+geom_point(data=car3,aes(x = YEAR, y = TOTAL),colour="red")
options(scipen=10000000)
ggplot(data = car, aes(x=YEAR,y=TOTAL,fill=location))+geom_line()+geom_point()+geom_line(data=car2,aes(x=YEAR,y=TOTAL),colour="blue")+geom_point(data=car3,aes(x = YEAR, y = TOTAL),colour="red")
ggplot(data = car, aes(x=YEAR,y=TOTAL,fill=location(c(1:3))))+geom_line()+geom_point()+geom_line(data=car2,aes(x=YEAR,y=TOTAL),colour="blue")+geom_point(data=car3,aes(x = YEAR, y = TOTAL),colour="red")
options(scipen=10000000)
ggplot(data = car, aes(x=YEAR,y=TOTAL,fill='location')+geom_line()+geom_point()+geom_line(data=car2,aes(x=YEAR,y=TOTAL),colour="blue")+geom_point(data=car3,aes(x = YEAR, y = TOTAL),colour="red")
location=c('서울','경기','인천')
options(scipen=10000000)
ggplot(data = car, aes(x=YEAR,y=TOTAL,fill='location')+geom_line()+geom_point()+geom_line(data=car2,aes(x=YEAR,y=TOTAL),colour="blue")+geom_point(data=car3,aes(x = YEAR, y = TOTAL),colour="red")
options(scipen=10000000)
ggplot(data = car, aes(x=YEAR,y=TOTAL,fill='location'))+geom_line()+geom_point()+geom_line(data=car2,aes(x=YEAR,y=TOTAL),colour="blue")+geom_point(data=car3,aes(x = YEAR, y = TOTAL),colour="red")
drvName<- 'oracle.jdbc.driver.OracleDriver';
id<- 'ruser';
pwd<- '111111'
url<-'jdbc:oracle:thin:@localhost:1521:XE'
# 1. Driver Loading
drv <- JDBC(driverClass = drvName,classPath = 'c:\\java_hive_lib\\ojdbc6.jar')
# 2. Connection
conn<- dbConnect(drv,url,id,pwd)
# 3. Statement
sqlstr1<-"select * from CAR where LOCATION='서울특별시' ";
sqlstr2<-"select * from CAR where LOCATION='인천광역시' ";
sqlstr3<-"select * from CAR where LOCATION='경기도' ";
# 4. ResultSet
car1<-dbGetQuery(conn,sqlstr1);
car2<-dbGetQuery(conn,sqlstr2);
car3<-dbGetQuery(conn,sqlstr3);
dbDisconnect(conn)
ggplot(data=car1, aes(x=YEAR, y=TOTAL))+geom_line()
options(scipen=10000000)
options(scipen=10000000)
ggplot(data = car, aes(x=YEAR,y=TOTAL,fill='location'))+geom_line()+geom_point()+geom_line(data=car2,aes(x=YEAR,y=TOTAL),colour="blue")+geom_point(data=car3,aes(x = YEAR, y = TOTAL),colour="red")
ggplot(data = car, aes(x=YEAR,y=TOTAL,fill='location'))+geom_line()+geom_point()+geom_line(data=car2,aes(x=YEAR,y=TOTAL),colour="blue")+geom_point(data=car3,aes(x = YEAR, y = TOTAL),colour="red")
ggplot(data=car2, aes(x=YEAR, y=TOTAL))+geom_col()
ggplot(data = car, aes(x=YEAR,y=TOTAL))+geom_line()+geom_point()+geom_line(data=car2,aes(x=YEAR,y=TOTAL),colour="blue")+geom_point(data=car3,aes(x = YEAR, y = TOTAL),colour="red")
ggplot(data=car1, aes(x=YEAR, y=TOTAL))+geom_col()
options(scipen=10000000)
ggplot(data=car2, aes(x=YEAR, y=TOTAL))+geom_line()
ggplot(data=car2, aes(x=YEAR, y=TOTAL),colour="blue")+geom_line()
ggplot(data=car2, aes(x=YEAR, y=TOTAL),colour="blue")+geom_point()
ggplot(car1,aes(x=YEAR, y=TOTAL))+geom_line()
ggplot(data=car2, aes(x=YEAR, y=TOTAL, group=1),colour="blue")+geom_point()
ggplot(data=car2, aes(x=YEAR, y=TOTAL, group=1),colour="blue")+geom_line()
ggplot(data=car1, aes(x=YEAR, y=TOTAL, group=1))+geom_line()+
geom_line(data=car2,aes(x=YEAR, y=TOTAL, group2),colour='green')+
geom_line(data=car3,aes(x=YEAR, y=TOTAL, group3),colour='blue')+
geom_point(data=car1,aes(x=YEAR, y=TOTAL),colour='red')+
geom_point(data=car2,aes(x=YEAR, y=TOTAL),colour='green')+
geom_point(data=car3,aes(x=YEAR, y=TOTAL),colour='blue')
ggplot(data=car1, aes(x=YEAR, y=TOTAL, group=1))+geom_line()+
geom_line(data=car2,aes(x=YEAR, y=TOTAL, group=2),colour='green')+
geom_line(data=car3,aes(x=YEAR, y=TOTAL, group=3),colour='blue')+
geom_point(data=car1,aes(x=YEAR, y=TOTAL),colour='red')+
geom_point(data=car2,aes(x=YEAR, y=TOTAL),colour='green')+
geom_point(data=car3,aes(x=YEAR, y=TOTAL),colour='blue')
library(rJava)
library(RJDBC)
library(DBI)
drvName<- 'oracle.apache.hive.jdbc.HiveDriver';
id<- 'root';
pwd<- '111111'
url<-'jdbc:hive2://192.168.111.100:10000'
hive_lib <-'c:\\java_hive_lib'
.jinit();
.jaddClassPath(dir(hive_lib,full.names = T));
.jclassPath();
# 1. Driver Loading
drv <- JDBC(driverClass = drvName,classPath = 'hive-jdbc-1.0.1.jar')
# 2. Connection
# 1. Driver Loading
drv <- JDBC(driverClass = drvName,
classPath = 'hive-jdbc-1.0.1.jar')
# 2. Connection
drvName<- 'oracle.apache.hive.jdbc.HiveDriver';
id<- 'root';
pwd<- '111111'
url<-'jdbc:hive2://192.168.111.100:10000'
hive_lib <-'c:\\java_hive_lib'
.jinit();
.jaddClassPath(dir(hive_lib,full.names = T));
.jclassPath();
# 1. Driver Loading
drv <- JDBC(driverClass = drvName,
classPath='hive-jdbc-1.0.1.jar')
# 2. Connection
conn<- dbConnect(drv,url,id,pwd)
source('C:/Project_Connect/R programming/day08/rhive.R', encoding = 'UTF-8', echo=TRUE)
library(rJava)
library(RJDBC)
library(DBI)
drvName<- 'oracle.apache.hive.jdbc.HiveDriver';
id<- 'root';
pwd<- '111111'
url<-'jdbc:hive2://192.168.111.100:10000'
hive_lib <-'c:\\java_hive_lib'
.jinit();
.jaddClassPath(dir(hive_lib,full.names = T));
.jclassPath();
drv <- JDBC(driverClass = drvName,
classPath='hive-jdbc-1.0.1.jar')
# 1. Driver Loading
drv <- JDBC(driverClass = drvName,
classPath='hive-jdbc-1.0.1.jar')
drvName<- 'org.apache.hive.jdbc.HiveDriver';
id<- 'root';
pwd<- '111111'
url<-'jdbc:hive2://192.168.111.100:10000'
hive_lib<-'c://java_hive_lib'
.jinit();
.jaddClassPath(dir(hive_lib,full.names = T));
.jclassPath();
# 1. Driver Loading
drv <- JDBC(driverClass = drvName,classPath = 'hive-jdbc-1.0.1.jar')
# 2. Connection
conn<- dbConnect(drv,url,id,pwd)
# 3. Statement
sqlstr<-'SELECT * FROM airline_delay LIMIT 10';
# 4. ResultSet
air<-dbGetQuery(conn,sqlstr);
# 5. Close
dbDisconnect(conn)
air
drvName<- 'org.apache.hive.jdbc.HiveDriver';
id<- 'root';
pwd<- '111111'
url<-'jdbc:hive2://192.168.111.100:10000'
hive_lib <-'c:\\java_hive_lib'
.jinit();
.jaddClassPath(dir(hive_lib,full.names = T));
.jclassPath();
# 1. Driver Loading
drv <- JDBC(driverClass = drvName,
classPath='hive-jdbc-1.0.1.jar')
# 2. Connection
conn<- dbConnect(drv,url,id,pwd)
# 3. Statement
sqlstr1<-"select * from airline_delay LIMIT 10"
# 4. ResultSet
air <-dbGetQuery()
# 5. Close
dbDisconnect(conn)
#HIVE를 연동하여 R을 돌리기
library(rJava)
library(RJDBC)
library(DBI)
drvName<- 'org.apache.hive.jdbc.HiveDriver';
id<- 'root';
pwd<- '111111'
url<-'jdbc:hive2://192.168.111.100:10000'
hive_lib <-'c:\\java_hive_lib'
.jinit();
.jaddClassPath(dir(hive_lib,full.names = T));
.jclassPath();
# 1. Driver Loading
drv <- JDBC(driverClass = drvName,
classPath='hive-jdbc-1.0.1.jar')
# 2. Connection
conn<- dbConnect(drv,url,id,pwd)
# 3. Statement
sqlstr1<-"select * from airline_delay LIMIT 10"
# 4. ResultSet
air <-dbGetQuery(conn,sqlstr1)
# 5. Close
dbDisconnect(conn)
library(rJava)
library(RJDBC)
library(DBI)
drvName<- 'org.apache.hive.jdbc.HiveDriver';
id<- 'root';
pwd<- '111111'
url<-'jdbc:hive2://192.168.111.100:10000'
hive_lib <-'c:\\java_hive_lib'
.jinit();
.jaddClassPath(dir(hive_lib,full.names = T));
.jclassPath();
# 1. Driver Loading
drv <- JDBC(driverClass = drvName,
classPath='hive-jdbc-1.0.1.jar')
# 2. Connection
conn<- dbConnect(drv,url,id,pwd)
# 3. Statement
#SQL 문으로 년도와 달 딜레이된 총 합을 받는다.
sqlstr<-"select Year,Month,COUNT(*) from airline_delay where Month IN(1,2,3,4,5,6,7,8,9,10,11,12)AND ArrDelay>0 "
# 4. ResultSet
air <-dbGetQuery(conn,sqlstr)
# 5. Close
dbDisconnect(conn)
drvName<- 'org.apache.hive.jdbc.HiveDriver';
id<- 'root';
pwd<- '111111'
url<-'jdbc:hive2://192.168.111.100:10000'
hive_lib <-'c:\\java_hive_lib'
.jinit();
.jaddClassPath(dir(hive_lib,full.names = T));
.jclassPath();
# 1. Driver Loading
drv <- JDBC(driverClass = drvName,
classPath='hive-jdbc-1.0.1.jar')
# 2. Connection
conn<- dbConnect(drv,url,id,pwd)
# 3. Statement
#SQL 문으로 년도와 달 딜레이된 총 합을 받는다.
sqlstr<-'select Year,Month,COUNT(*)
from airline_delay where Month IN (1,2,3,4,5,6,7,8,9,10,11,12) AND ArrDelay>0
GROUP BY Year, Month';
# 5. Close
dbDisconnect(conn)
library(rJava)
library(RJDBC)
library(DBI)
drvName<- 'org.apache.hive.jdbc.HiveDriver';
id<- 'root';
pwd<- '111111'
url<-'jdbc:hive2://192.168.111.100:10000'
hive_lib <-'c:\\java_hive_lib'
.jinit();
.jaddClassPath(dir(hive_lib,full.names = T));
.jclassPath();
# 1. Driver Loading
drv <- JDBC(driverClass = drvName,
classPath='hive-jdbc-1.0.1.jar')
# 2. Connection
conn<- dbConnect(drv,url,id,pwd)
# 3. Statement
#SQL 문으로 년도와 달 딜레이된 총 합을 받는다.
sqlstr<-'select Year,Month,COUNT(*)
from airline_delay where Month IN (1,2,3,4,5,6,7,8,9,10,11,12) AND ArrDelay>0
GROUP BY Year, Month';
# 4. ResultSet
air <-dbGetQuery(conn,sqlstr)
# 5. Close
dbDisconnect(conn)
air_06 <- air[air$year=='2006']
air_07 <- air[air$year=='2007']
air_08 <- air[air$year=='2008']
new_air_06 <-air_06[,c(-1)]
new_air_07 <-air_07[,c(-1)]
new_air_08 <-air_08[,c(-1)]
air
air_06 <- air[air$year=='2006',]
air_07 <- air[air$year=='2007',]
air_08 <- air[air$year=='2008',]
library(rJava)
library(RJDBC)
library(DBI)
library(ggplot2)
library(dplyr)
ggplot(data=new_air_06, aes(x=new_air_06$month, y=new_air_06$'_c2',fill="2006"))+
goem_line()+geom_point()+
goem_line(data=new_air_07, aes(x=new_air_07$month, y=new_air_07$'_c2'),colour="red")+ goem_point(data=new_air_07, aes(x=new_air_07$month, y=new_air_07$'_c2'),colour="red")+goem_line(data=new_air_08, aes(x=new_air_08$month, y=new_air_08$'_c2'),colour="blue")+ goem_point(data=new_air_08, aes(x=new_air_08$month, y=new_air_08$'_c2'),colour="blue")
new_air_06
new_air_06 <-air_06[,c(-1)]
new_air_07 <-air_07[,c(-1)]
new_air_08 <-air_08[,c(-1)]
ggplot(data=new_air_06, aes(x=new_air_06$month, y=new_air_06$'_c2',fill="2006"))+
goem_line()+geom_point()+
goem_line(data=new_air_07, aes(x=new_air_07$month, y=new_air_07$'_c2'),colour="red")+ goem_point(data=new_air_07, aes(x=new_air_07$month, y=new_air_07$'_c2'),colour="red")+goem_line(data=new_air_08, aes(x=new_air_08$month, y=new_air_08$'_c2'),colour="blue")+ goem_point(data=new_air_08, aes(x=new_air_08$month, y=new_air_08$'_c2'),colour="blue")
library(rJava)
library(RJDBC)
library(DBI)
library(ggplot2)
library(dplyr)
ggplot(data=new_air_06, aes(x=new_air_06$month, y=new_air_06$'_c2',fill="2006"))+
goem_line()
ggplot(data=new_air_06, aes(x=new_air_06$month, y=new_air_06$'_c2',fill="2006"))
ggplot(data=new_air_06, aes(x=new_air_06$month, y=new_air_06$'_c2',fill="2006"))+
goem_line()+geom_point()
ggplot(data=new_air_06, aes(x=new_air_06$month, y=new_air_06$'_c2',fill="2006"))+
geom_line()+geom_point()+
geom_line(data=new_air_07, aes(x=new_air_07$month, y=new_air_07$'_c2'),colour="red")+ goem_point(data=new_air_07, aes(x=new_air_07$month, y=new_air_07$'_c2'),colour="red")+geom_line(data=new_air_08, aes(x=new_air_08$month, y=new_air_08$'_c2'),colour="blue")+ goem_point(data=new_air_08, aes(x=new_air_08$month, y=new_air_08$'_c2'),colour="blue")
ggplot(data=new_air_06, aes(x=new_air_06$month, y=new_air_06$'_c2',fill="2006"))+
geom_line()+geom_point()+
geom_line(data=new_air_07, aes(x=new_air_07$month, y=new_air_07$'_c2'),colour="red")+ geom_point(data=new_air_07, aes(x=new_air_07$month, y=new_air_07$'_c2'),colour="red")+geom_line(data=new_air_08, aes(x=new_air_08$month, y=new_air_08$'_c2'),colour="blue")+ geom_point(data=new_air_08, aes(x=new_air_08$month, y=new_air_08$'_c2'),colour="blue")
new_air_06
new_air_06 <-air_06[,]
new_air_06
new_air_07
colnames(new_air_06)<-c('Month','TOTAL');
ggplot(data=new_air_06, aes(x=new_air_06$month, y=new_air_06$TOTAL,fill="2006"))+
geom_line()+geom_point()
ggplot(data=new_air_06, aes(x=new_air_06$month, y=new_air_06$TOTAL,fill="2006"))+
geom_line()
ggplot(data=new_air_06, aes(x=new_air_06$Month, y=new_air_06$TOTAL,fill="2006"))+
geom_line()
new_air_06 <-air_06[,c(-1)]
new_air_06 <-air_06[,c(-1)]
new_air_07 <-air_07[,c(-1)]
new_air_08 <-air_08[,c(-1)]
ggplot(data=new_air_06, aes(x=new_air_06$month, y=new_air_06$'_c2',fill="2006"))+
geom_line()+geom_point()+
geom_line(data=new_air_07, aes(x=new_air_07$month, y=new_air_07$'_c2'),colour="red")+ geom_point(data=new_air_07, aes(x=new_air_07$month, y=new_air_07$'_c2'),colour="red")+geom_line(data=new_air_08, aes(x=new_air_08$month, y=new_air_08$'_c2'),colour="blue")+ geom_point(data=new_air_08, aes(x=new_air_08$month, y=new_air_08$'_c2'),colour="blue")
